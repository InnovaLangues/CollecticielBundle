{% extends "IcapDropzoneBundle:Dropzone:edit.html.twig" %}

{% form_theme form "IcapDropzoneBundle::form_theme_bootstrap3.html.twig" %}


{% block resourceBreadcrumb %}
    <li><a href="{{ path('icap_dropzone_edit_common',{'resourceId':dropzone.id}) }}"><span
                    class="glyphicon icon-list"></span>  {{ dropzone.resourceNode.name }}</a></li>
    <li class="active"> {{ 'Evaluation criterions'|trans({}, 'icap_dropzone') }}</li>
{% endblock %}


{% block drop_zone_content_edit %}


    <form class="form-horizontal" method="POST" action="{{ path('icap_dropzone_edit_criteria', {'resourceId': dropzone.id}) }}">
    <p>{{ 'criteria_explication'|trans({}, 'icap_dropzone')|raw }}</p>

    <div class='container col-md-12'>
        <div class='row '>
        <h4> {{ 'Instructions for examiners'|trans({},'icap_dropzone') }}</h4>
             {{ form_widget(form.correctionInstruction) }}
             {{ form_errors(form.correctionInstruction) }}
        </div>
    </div>
    <h3>{{ 'Evaluation Criteria'|trans({}, 'icap_dropzone') }}</h3>
        {% if nbCorrection > 0 %}
            <div class="alert alert-warning">
                <h4> {{ 'Warning'|trans({}, 'icap_dropzone') }}</h4>

                <p> {{ 'corrections were already created'|transchoice(nbCorrection,{},'icap_dropzone') }}</p>

                <p> {{ 'Modify add or delete criteria will affect this corrections if you recalculate the note on it.'|trans({},'icap_dropzone') }}</p>
            </div>
        {% endif %}
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <a href="{{ path('icap_dropzone_edit_add_criterion', {'resourceId': dropzone.id, 'page': pager.currentPage}) }}" class="btn btn-primary add-criterion-button disabled-during-edition"><span class="glyphicon icon-plus"> {{ 'Add a criterion'|trans({}, 'icap_dropzone') }}</span></a>
                    <a href="{{ path('icap_dropzone_recalculate_dropzone_grades', {'dropzone': dropzone.id}) }}"
                       class="btn btn-default disabled-during-edition" data-toggle="tooltip" data-placement="left"
                       data-container="body"
                       title="{{ 'recalculate_helper'|trans({},'icap_dropzone') }}"><span
                                class="glyphicon icon-repeat"> {{ 'Recalculate all grade'|trans({}, 'icap_dropzone') }}</span></a>
                </div>

                <div class="col-md-3 add-remove-column" {% if pager.nbResults == 0 %}style="display: none;"{% endif %}>
                    <div class="form-group column-input">
                        {{ form_row(form.totalCriteriaColumn, {'type': 'number', 'label_col_size': 'col-md-3', 'input_col_size': 'col-md-9', 'label_attr': {'style': 'font-weight: normal;'}, 'attr': {'class': 'form-control', 'style': 'width: 60px;'}}) }}
                    </div>

                    <div class="row column-input-js" style="display: none;">
                        <label class="col-md-12 control-label pull-right" style="text-align: center;">
                            <div>{{ 'Change scale'|trans({}, 'icap_dropzone') }}</div>
                            <span>
                                <a href="#" class="remove-column"><span class="glyphicon icon-minus-sign-alt"></span> </a>
                                <a href="#" class="add-column"><span class="glyphicon icon-plus-sign-alt"></span> </a>
                            </span>

                        </label>
                    </div>
                </div>
            </div>

            {% if pager.haveToPaginate %}
                <div class="row">
                    {{
                    pagerfanta(
                    pager,
                    'twitter_bootstrap_translated',
                    {
                    'proximity' : 1,
                    'routeName': 'icap_dropzone_edit_criteria_paginated',
                    'routeParams': {'resourceId': dropzone.id}
                    }
                    )
                    }}
                </div>
            {% endif %}

            {% if pager %}
                {% for criterion in pager.currentPageResults %}
                    <hr/>
                    <div id="criterion-{{ criterion.id }}" class="criterion-row">
                        {% set criterionNumber = (((pager.currentPage-1) * pager.maxPerPage) + loop.index) %}
                        <h4>#{{ criterionNumber }}</h4>
                        <div class="criterion-show">
                            <div class="row">
                                <div class="col-md-9">
                                    {{ criterion.instruction|raw }}
                                </div>

                                <div class="col-md-3">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <span>{{ 'Not at all'|trans({}, 'icap_dropzone') }}</span>
                                            <span class="pull-right">{{ 'Entirely'|trans({}, 'icap_dropzone') }}</span>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12 column-container-div">
                                            <span class="column-container">
                                                {% for i in 1..dropzone.totalCriteriaColumn %}
                                                    <input type="radio" disabled />
                                                {% endfor %}
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group pull-right">
                                        <a href="{{ path('icap_dropzone_edit_add_criterion', {'resourceId': dropzone.id, 'page': pager.currentPage, 'criterionId': criterion.id}) }}" class="btn btn-default btn-sm edit-criterion-button disabled-during-edition" data-criterion="criterion-{{ criterion.id }}"><span class="glyphicon icon-edit"></span> {{ 'dropzone_edit'|trans({}, 'icap_dropzone') }}</a>
                                        <a href="{{ path('icap_dropzone_edit_delete_criterion', {'resourceId': dropzone.id, 'page': pager.currentPage, 'criterionId': criterion.id, 'number': criterionNumber}) }}" class="btn btn-danger btn-sm launch-modal"><span class="glyphicon icon-trash"></span> {{ 'Delete'|trans({}, 'icap_dropzone') }}</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="criterion-edit well" style="display: none;"></div>
                    </div>
                {% endfor %}
            {% endif %}

            {% if pager.haveToPaginate %}
                <div class="row">
                    {{
                    pagerfanta(
                    pager,
                    'twitter_bootstrap_translated',
                    {
                    'proximity' : 1,
                    'routeName': 'icap_dropzone_edit_criteria_paginated',
                    'routeParams': {'resourceId': dropzone.id}
                    }
                    )
                    }}
                </div>
            {% endif %}

            <hr/>
            <div class="row add-criteria-zone">
                <div class="col-md-12">
                    {% if pager.nbResults == 0 %}
                        {{ 'There are no evaluation criterion'|trans({}, 'icap_dropzone') }}
                        <hr/>
                    {% endif %}
                </div>
            </div>

            <div id="new-criteria" class="new-criteria well" style="display: none;">
                <div class="new-criteria-zone"></div>
            </div>

            <div class="template" style="display: none;">
                <div class="template-criteria-zone" style="display: none;">
                    <div class="row">
                        <div class="col-md-9 new-criteria-form">
                            {# form awaiting #}
                        </div>

                        <div class="col-md-3">
                            <div class="row">
                                <div class="col-md-12">
                                    <span>{{ 'Not at all'|trans({}, 'icap_dropzone') }}</span>
                                    <span class="pull-right">{{ 'Entirely'|trans({}, 'icap_dropzone') }}</span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 column-container-div">
                                    <span class="column-container">
                                        {% for i in 1..dropzone.totalCriteriaColumn %}
                                            <input type="radio" disabled />
                                        {% endfor %}
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="btn-group pull-right">
                                <a href="#" class="btn btn-default btn-sm form-cancel" data-criterion="new">{{ 'Cancel'|trans({}, 'icap_dropzone') }}</a>
                                <a href="#" class="btn btn-primary btn-sm form-submit">{{ 'Save criterion'|trans({}, 'icap_dropzone') }}</a>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            <div class="row">
                <div class="pull-right">
                    {{ form_row(form.allowCommentInCorrection, {'input_col_size': ' '}) }}
                </div>
            </div>

            {{ form_rest(form) }}
            <div class="row">
                <div class="btn-group pull-right">
                    <a href="{{ path('icap_dropzone_edit_common', {'resourceId': dropzone.getId()}) }}" class="btn btn-default criteria-form-button back-button">{{ 'Return'|trans({}, 'icap_dropzone') }}</a>
                    <button id="submit_global_form" type="submit"
                            class="btn btn-primary criteria-form-button save-submit">{{ 'Save and finished'|trans({}, 'icap_dropzone') }}</button>

                </div>
            </div>
        </form>
    </div>

    <div class="row">
        <div class="col-md-12">
            <strong>2/2</strong>
        </div>
    </div>
    <div class="modal fade" id="recalculateAskPopup" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">{{ 'Warning'|trans({}, 'icap_dropzone') }}  {{ 'corrections were already created'|transchoice(nbCorrection,{},'icap_dropzone') }}</h4>
                </div>
                <div class="modal-body">


                    <p> {{ 'Your modifications will only affect new corrections. For older, do you want to apply modification and recalculate grades'|trans({},'icap_dropzone') }}</p>

                </div>
                <div class="modal-footer">
                    <button id="notRecalculateButton"
                            class="btn btn-default">{{ 'Just save'|trans({}, 'icap_dropzone') }}</button>

                    <button id='recalculateButton' class="btn btn-primary pull-right">
                        {{ 'Save and recalculate all grade'|trans({}, 'icap_dropzone') }}
                    </button>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .row {
            padding-top: 10px;
        }
        .column-container-div {
            text-align: center;
        }

        hr {
            margin-bottom: 0px;
            margin-top: 0px;
        }

    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/icapdropzone/js/popup.js') }}"></script>
    {% render controller('ClarolineCoreBundle:ResourceType:initPicker') %}
    {{ tinymce_init() }}


    <script>
        var manualSubmit = false;
        var nbCorrection = {{nbCorrection}};
        $(document).ready(function () {
            setSaveListener();
            $('#icap_dropzone_criteria_form_goBack').val(0);
            $('.back-button').on('click', function(event) {
                event.preventDefault();
                $('#icap_dropzone_criteria_form_goBack').val(1);
                $('.save-submit').trigger('click');
            });

            $('.column-input').hide();
            $('.column-input-js').show();

            var totalColumn = {{ dropzone.totalCriteriaColumn }};
            var comment = {{ dropzone.allowCommentInCorrection ? 1 : 0 }}

            $('#icap_dropzone_criteria_form_allowCommentInCorrection').on('click', function () {
                if (comment == 0) {
                    comment = 1;
                } else {
                    comment = 0;
                }
                $('.comment-input input').val(comment);
            });

            var setColumnInput = function () {
                $('.column-container').empty();
                for (i = 0; i < totalColumn; i++) {
                    $('.column-container').append('<input type="radio" disabled style="margin-right: 4px; margin-left: 0px; padding-right: 0px; padding-left: 0px"/>');
                }
            };

            $('.add-column').on('click', function (event) {
                event.preventDefault();
                if (totalColumn < 10) {
                    totalColumn++;
                    setColumnInput();

                    $('.column-input input').val(totalColumn);
                }
            });

            $('.remove-column').on('click', function (event) {
                event.preventDefault();
                if (totalColumn > 3) {
                    totalColumn--;
                    setColumnInput();

                    $('.column-input input').val(totalColumn);
                }
            });

            function resetTiny(){
                $('.tinymce').each(function(){
                    $(this).tinymce().remove();
                });
            }

            //var form_count = 0;
            $('.add-criterion-button').on('click', function (event) {
                event.preventDefault();

                $('.disabled-during-edition').attr('disabled', 'disabled');
                $('.criteria-form-button').attr('disabled', 'disabled');

                $.get($(this).attr('href'))
                    .done(function (data) {
                        resetTiny();
                        $('.new-criteria-zone').empty();
                        $('.criterion-row > .criterion-edit').empty();

                        $('.template > .template-criteria-zone').clone().appendTo('.new-criteria-zone');
                        $('.new-criteria-zone .new-criteria-form').append(data);

                        $('.column-input input').val(totalColumn);
                        $('.comment-input input').val(comment);

                        $('.add-criteria-zone').hide();
                        $('.new-criteria').show();
                        $('.new-criteria-zone > .template-criteria-zone').show();

                        $('.new-criteria-zone > .template-criteria-zone .form-buttons').hide();

                        $('.add-remove-column').show();
                        initTinyMCE(stfalcon_tinymce_config);

                        var top = $('#new-criteria').offset().top;
                        top = top - 50;
                        $('body,html').scrollTop(top);
                        setSaveListener();
                    })
                ;
            });
            $('.edit-criterion-button').on('click', function (event) {
                event.preventDefault();

                $('.disabled-during-edition').attr('disabled', 'disabled');
                $('.criteria-form-button').attr('disabled', 'disabled');

                var criterionId = $(this).data('criterion');

                $.get($(this).attr('href'))
                    .done(function (data) {
                        resetTiny();
                        $('.new-criteria-zone').empty();
                        $('.criterion-row > .criterion-edit').empty();

                        $('.template > .template-criteria-zone').clone().appendTo('#'+criterionId+' > .criterion-edit');
                        $('#'+criterionId+' > .criterion-edit .new-criteria-form').append(data);

                        $('#'+criterionId+' > .criterion-edit .form-cancel').data('criterion', criterionId);
                        $('.column-input input').val(totalColumn);
                        $('.comment-input input').val(comment);

                        $('#'+criterionId+' > .criterion-show').hide();
                        $('#'+criterionId+' > .criterion-edit').show();
                        $('#'+criterionId+' > .criterion-edit > .template-criteria-zone').show();

                        $('#'+criterionId+' > .criterion-edit > .template-criteria-zone .form-buttons').hide();

                        initTinyMCE(stfalcon_tinymce_config);
                        setSaveListener();
                    })
                ;
            });

            $('form').submit(function (e) {
                if (nbCorrection > 0 && !manualSubmit) {
                    e.preventDefault();
                    $('#recalculateAskPopup').modal('show');
                    manualSubmit = true;
                    $('#recalculateButton').unbind('click').click(function () {
                        $('#icap_dropzone_criteria_form_recalculateGrades').val(1);
                        $('form').submit();
                    });

                    $('#notRecalculateButton').unbind('click').click(function () {
                        $('form').submit();
                    });
                }
            });


        });

        function setSaveListener()
        {
            $('.form-submit').unbind('click').click(function(event) {
                event.preventDefault();
                //I do the "click" on submit button for keep html5 warning
                $('.inline-body button[type="submit"]').trigger('click');
            });

            $('.form-cancel').unbind('click').click(function (event) {
                event.preventDefault();
                var criterionId = $(this).data('criterion');
                if (criterionId == 'new') {
                    $('.new-criteria').hide();
                    $('.add-criteria-zone').show();

                    if ({{ (pager.nbResults == 0) ? 'true' : 'false' }}) {
                        $('.add-remove-column').hide();
                    }
                } else {
                    $('#'+criterionId+' > .criterion-edit').hide();
                    $('#'+criterionId+' > .criterion-show').show();
                }

                $('.disabled-during-edition').attr('disabled', null);
                $('.criteria-form-button').attr('disabled', null);
            });
        }
    </script>
{% endblock %}